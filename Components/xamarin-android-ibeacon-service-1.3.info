{"Name":"Android iBeacon Service","Id":758,"Alias":"xamarin-android-ibeacon-service","Description":"Xamarin Android iBeacon Service\r\n===============================\r\n\r\nA Xamarin.Android binding of the [Radius Networks\u0027 Android iBeacon Service](https://github.com/RadiusNetworks/android-ibeacon-service).\r\n\r\nLearn more about iBeacons for Android by visiting the [Radius Networks iBeacon Android developer site](http://developer.radiusnetworks.com/ibeacon/android/).\r\n\r\n##What does this library do?\r\n\r\nIt allows Android devices to use iBeacons much like iOS devices do. A Xamarin.Android app can request to get notifications when one or more iBeacons appear or disappear. A Xamarin.Android app can also request to get a ranging update from one or more iBeacons at a frequency of 1Hz.\r\n\r\n## Reference Application\r\n\r\nCheck out the [Find The Monkey - Android](https://github.com/chrisriesgo/FindTheMonkey-Android) reference application for examples of Monitoring and Ranging Beacons with Xamarin.Android.\r\n\r\n## License\r\n\r\nThis software is available under the Apache License 2.0, allowing you to use the library in your applications.","Version":"1.3","Summary":"A Xamarin.Android library providing APIs to interact with iBeacons.","QuickStart":"Xamarin.Android iBeacon Service\r\n===============================\r\n\r\n# Reference Application\r\n\r\nFor a working example of Monitoring and Ranging iBeacons with Xamarin.Android, check out the [Find The Monkey - Android](https://github.com/chrisriesgo/FindTheMonkey-Android) reference application.\r\n\r\n## Monitoring Example Code\r\n\r\n\tpublic class MainActivity : Activity, IBeaconConsumer\r\n\t{\r\n\t\tprivate const string UUID = \"e4C8A4FCF68B470D959F29382AF72CE7\";\r\n\t\tprivate const string monkeyId = \"Monkey\";\r\n\r\n\t\tView _view;\r\n\t\tIBeaconManager _iBeaconManager;\r\n\t\tMonitorNotifier _monitorNotifier;\r\n\t\tRegion _monitoringRegion;\r\n\r\n\t\tpublic MainActivity()\r\n\t\t{\r\n\t\t\t_iBeaconManager = IBeaconManager.GetInstanceForApplication(this);\r\n\r\n\t\t\t_monitorNotifier = new MonitorNotifier();\r\n\t\t\t_monitoringRegion = new Region(monkeyId, UUID, null, null);\r\n\t\t}\r\n\r\n\t\tprotected override void OnCreate(Bundle bundle)\r\n\t\t{\r\n\t\t\tbase.OnCreate(bundle);\r\n\r\n\t\t\tSetContentView(Resource.Layout.Main);\t\t\t\r\n\r\n\t\t\t_view = FindViewById\u003cRelativeLayout\u003e(Resource.Id.findTheMonkeyView);\r\n\t\t\t_text = FindViewById\u003cTextView\u003e(Resource.Id.monkeyStatusLabel);\r\n\r\n\t\t\t_iBeaconManager.Bind(this);\r\n\r\n\t\t\t_monitorNotifier.EnterRegionComplete += EnteredRegion;\r\n\t\t\t_monitorNotifier.ExitRegionComplete += ExitedRegion;\r\n\t\t}\r\n\t\t\r\n\t\tpublic void OnIBeaconServiceConnect()\r\n\t\t{\r\n\t\t\t_iBeaconManager.SetMonitorNotifier(_monitorNotifier);\r\n\t\t\t_iBeaconManager.StartMonitoringBeaconsInRegion(_monitoringRegion);\r\n\t\t}\r\n\r\n\t\tvoid EnteredRegion(object sender, MonitorEventArgs e)\r\n\t\t{\r\n\t\t\tRunOnUiThread(() =\u003e Toast.MakeText(this, \"Beacons are visible\", ToastLength.Short).Show());\r\n\t\t}\r\n\r\n\t\tvoid ExitedRegion(object sender, MonitorEventArgs e)\r\n\t\t{\r\n\t\t\tRunOnUiThread(() =\u003e Toast.MakeText(this, \"No beacons visible\", ToastLength.Short).Show());\r\n\t\t}\r\n\r\n\t\tprotected override void OnDestroy()\r\n\t\t{\r\n\t\t\tbase.OnDestroy();\r\n\r\n\t\t\t_monitorNotifier.EnterRegionComplete -= EnteredRegion;\r\n\t\t\t_monitorNotifier.ExitRegionComplete -= ExitedRegion;\r\n\r\n\t\t\t_iBeaconManager.StopMonitoringBeaconsInRegion(_monitoringRegion);\r\n\t\t\t_iBeaconManager.UnBind(this);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n## Ranging Example Code\r\n\r\n\tpublic class MainActivity : Activity, IBeaconConsumer\r\n\t{\r\n\t\tprivate const string UUID = \"e4C8A4FCF68B470D959F29382AF72CE7\";\r\n\t\tprivate const string monkeyId = \"Monkey\";\r\n\r\n\t\tView _view;\r\n\t\tIBeaconManager _iBeaconManager;\r\n\t\tRangeNotifier _rangeNotifier;\r\n\t\tRegion _rangingRegion;\r\n\t\tTextView _text;\r\n\r\n\t\tint _previousProximity;\r\n\r\n\t\tpublic MainActivity()\r\n\t\t{\r\n\t\t\t_iBeaconManager = IBeaconManager.GetInstanceForApplication(this);\r\n\r\n\t\t\t_rangeNotifier = new RangeNotifier();\r\n\t\t\t_rangingRegion = new Region(monkeyId, UUID, null, null);\r\n\t\t}\r\n\r\n\t\tprotected override void OnCreate(Bundle bundle)\r\n\t\t{\r\n\t\t\tbase.OnCreate(bundle);\r\n\r\n\t\t\tSetContentView(Resource.Layout.Main);\r\n\r\n\t\t\t_view = FindViewById\u003cRelativeLayout\u003e(Resource.Id.findTheMonkeyView);\r\n\t\t\t_text = FindViewById\u003cTextView\u003e(Resource.Id.monkeyStatusLabel);\r\n\r\n\t\t\t_iBeaconManager.Bind(this);\r\n\r\n\t\t\t_rangeNotifier.DidRangeBeaconsInRegionComplete += RangingBeaconsInRegion;\r\n\t\t}\r\n\r\n\t\tpublic void OnIBeaconServiceConnect()\r\n\t\t{\r\n\t\t\t_iBeaconManager.SetRangeNotifier(_rangeNotifier);\r\n\t\t\t_iBeaconManager.StartRangingBeaconsInRegion(_rangingRegion);\r\n\t\t}\r\n\r\n\t\tvoid RangingBeaconsInRegion(object sender, RangeEventArgs e)\r\n\t\t{\r\n\t\t\tif (e.Beacons.Count \u003e 0)\r\n\t\t\t{\r\n\t\t\t\tvar beacon = e.Beacons.FirstOrDefault();\r\n\r\n\t\t\t\tswitch((ProximityType)beacon.Proximity)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase ProximityType.Immediate:\r\n\t\t\t\t\t\tRunOnUiThread(() =\u003e Toast.MakeText(this, \"You found the monkey!\", ToastLength.Short).Show());\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ProximityType.Near:\r\n\t\t\t\t\tRunOnUiThread(() =\u003e Toast.MakeText(this, \"You\u0027re getting warmer\", ToastLength.Short).Show());\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ProximityType.Far:\r\n\t\t\t\t\t\tRunOnUiThread(() =\u003e Toast.MakeText(this, \"You\u0027re freezing cold\", ToastLength.Short).Show());\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ProximityType.Unknown:\r\n\t\t\t\t\t\tRunOnUiThread(() =\u003e Toast.MakeText(this, \"I\u0027m not sure how close you are to the monkey\", ToastLength.Short).Show());\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_previousProximity = beacon.Proximity;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprotected override void OnDestroy()\r\n\t\t{\r\n\t\t\tbase.OnDestroy();\r\n\r\n\t\t\t_rangeNotifier.DidRangeBeaconsInRegionComplete -= RangingBeaconsInRegion;\r\n\r\n\t\t\t_iBeaconManager.StopRangingBeaconsInRegion(_rangingRegion);\r\n\t\t\t_iBeaconManager.UnBind(this);\r\n\t\t}\r\n\t}","Hash":"672ef0fae46c4281579d9592b30a3466","TargetPlatforms":["android"],"TrialHash":null}